{"version":3,"file":"static/js/76.49a2a96e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/Pages/MovieDetails/MovieDetails.module.css?f582","Pages/MovieDetails/MovieDetails.jsx","components/FetchApi/FetchApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"MovieDetails_main__znH73\",\"mainInfo\":\"MovieDetails_mainInfo__dbyvw\",\"info\":\"MovieDetails_info__it0bV\",\"btn\":\"MovieDetails_btn__qOcdK\"};","import { useState, useEffect,  } from 'react';\nimport { Link, useParams, useNavigate, Outlet, useLocation} from 'react-router-dom';\nimport { fetchById } from 'components/FetchApi/FetchApi';\nimport styles from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n    const { id } = useParams();\n    const navigate = useNavigate();\n\n    const location = useLocation();\n    // console.log(\"Movie details\", location.state);\n    const from  = location.state?.from || \"/movies\";\n    \n    const [state, setState] = useState({\n        item: {},\n        loading: false,\n        error: null,\n    })\n    \n    useEffect(() => {\n        const fetchMovie = async () => {\n            \n            try {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: true,\n                    error: null,\n                }))\n                const result = await fetchById(id);\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        item: result,\n                    }\n                })\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }))\n            }\n            finally {\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        loading: false,\n                    }\n                })\n            }\n        };\n        fetchMovie();\n    }, [id, setState]);\n\n    const goBack = () => navigate(from)\n\n    const { original_title, overview, poster_path, genres, vote_average } = state.item;\n    const genresMain = genres?.reduce((str, genre) => {\n    return str + `${genre.name} `;\n  }, '');\n\n    return (\n        <div className={styles.container}>\n            <button onClick={goBack} className={styles.btn}>Go back</button>\n            <div className={styles.main}>\n                {/* <h2>MovieDetails</h2> */}\n                <div className=\"mainImg\">\n                    <img src={'https://image.tmdb.org/t/p/w500' + poster_path} alt={original_title} width={`200px`} />\n                </div>\n                <div className={styles.mainInfo}>\n                    <h3>{original_title}</h3>\n                    <p>Rating: {vote_average}</p>\n                    <h4>Overview</h4>\n                    <p>{overview}</p>\n                    <h4>Genres</h4>\n                    <p>{genresMain}</p>\n                </div>\n            </div>\n            <div className={styles.info}>\n                <h4>Additional information</h4>\n                <ul>\n                    <li><Link state={{from}} to={`/movies/${id}/cast `}>Cast</Link></li>\n                    <li><Link state={{from}} to= {`/movies/${id}/reviews `}>Reviews</Link></li>\n                </ul>\n                <Outlet />\n            </div>\n        </div>\n        \n    \n    )\n   \n}\nexport default MovieDetails;","\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '03779c52c93ea63ebe46db37a334d7d8';\n\n\n// метод получения массива популярных фильмов. Total_pages = 1000 по дефолту.\nexport const fetchPopular = async () => {\n  try {\n    const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log(error, 'fetchPopular');\n  }\n};\n\n// метод получения массива фильмов по запросу.\nexport const fetchByQuery = async searchQuery => {\n  try {\n    const url = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&include_adult=false`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// метод получения инфо о фильме по айдишке\nexport const fetchById = async movieId => {\n  try {\n    const url = `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// актеры\nexport const fetchCredits = async movieId => {\n  try {\n    const url = `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//отзывы\nexport const fetchReviews = async movieId => {\n  try {\n    const url = `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};"],"names":["id","useParams","navigate","useNavigate","from","useLocation","state","useState","item","loading","error","setState","useEffect","fetchMovie","prevState","fetchById","result","original_title","overview","poster_path","genres","vote_average","genresMain","reduce","str","genre","name","className","styles","onClick","src","alt","width","to","BASE_URL","API_KEY","fetchPopular","url","fetch","response","json","data","results","console","log","fetchByQuery","searchQuery","movieId","fetchCredits","fetchReviews"],"sourceRoot":""}