{"version":3,"file":"static/js/746.5864ffdd.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","Pages/Home/Home.jsx","components/FetchApi/FetchApi.jsx","components/MovieList/MovieList.jsx"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useState, useEffect } from 'react';\nimport { fetchPopular } from 'components/FetchApi/FetchApi';\nimport MovieList from '../../components/MovieList/MovieList'\n// import styles from './Home.module.css'\n\nconst Home = () => {\n\n    const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n    })\n    \n    useEffect(() => {\n        const fetchMoviePopular = async () => {\n            \n            try {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: true,\n                    error: null,\n                }))\n                const result = await fetchPopular();\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        items: [...prevState.items, ...result]\n                    }\n                })\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }))\n            }\n            finally {\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        loading: false,\n                    }\n                })\n            }\n        };\n        fetchMoviePopular();\n    }, []);\n\n    const { items, loading, error } = state;\n    \n    return (\n        <div className=\"container\">\n            <h2>Popular movie</h2>\n            {items.length > 0 && <MovieList items={items} />}\n            {loading && <p>...load popular movie</p>}\n            {error && <p>...Popular movies load failed</p>}\n        </div>\n    \n    )\n}\nexport default Home;","\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '03779c52c93ea63ebe46db37a334d7d8';\n\n\n// метод получения массива популярных фильмов. Total_pages = 1000 по дефолту.\nexport const fetchPopular = async () => {\n  try {\n    const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log(error, 'fetchPopular');\n  }\n};\n\n// метод получения массива фильмов по запросу.\nexport const fetchByQuery = async searchQuery => {\n  try {\n    const url = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&include_adult=false`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// метод получения инфо о фильме по айдишке\nexport const fetchById = async movieId => {\n  try {\n    const url = `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// актеры\nexport const fetchCredits = async movieId => {\n  try {\n    const url = `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//отзывы\nexport const fetchReviews = async movieId => {\n  try {\n    const url = `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};","import { Link, useLocation } from 'react-router-dom';\n\n\nconst MovieList = ({ items }) => {\n    const location = useLocation();\n    // console.log(\"Movie List location\",location);\n    const elements = items.map(({ id, title }) => <li key={id}>\n        <Link state={{from: location}} to={`/movies/${id}`}>{title}</Link>\n</li>)\n    \n    return (\n            <ul>{elements}</ul>\n        )\n}\n\n  \nexport default MovieList;\nMovieList.defaultProps = {\n    items: []\n}"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","useState","items","loading","error","state","setState","useEffect","fetchMoviePopular","prevState","fetchPopular","result","className","length","MovieList","BASE_URL","API_KEY","url","fetch","response","json","data","results","console","log","fetchByQuery","searchQuery","fetchById","movieId","fetchCredits","fetchReviews","location","useLocation","elements","map","id","title","to","defaultProps"],"sourceRoot":""}