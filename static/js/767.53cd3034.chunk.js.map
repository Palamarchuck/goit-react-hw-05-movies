{"version":3,"file":"static/js/767.53cd3034.chunk.js","mappings":"+PACA,GAAgB,SAAW,2BAA2B,aAAe,gC,SC6ErE,EAxEiB,WACb,OAA0BA,EAAAA,EAAAA,UAAS,CAC/BC,MAAO,GACPC,SAAS,EACTC,MAAO,OAHX,eAAOC,EAAP,KAAcC,EAAd,KAMQC,GAAOC,EAAAA,EAAAA,MAAPD,IAERE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAU,mCAAG,oGAGXJ,GAAS,SAAAK,GAAS,yBACXA,GADW,IAEdR,SAAS,EACTC,MAAO,MAHO,IAHP,UAQUQ,EAAAA,EAAAA,IAAaL,GARvB,OAQLM,EARK,OASXP,GAAS,SAAAK,GACL,OAAO,kBACAA,GADP,IAEIT,MAAOW,EAAOC,MAErB,IAdU,gDAgBXR,GAAS,SAAAK,GAAS,yBACXA,GADW,IAEdP,MAAK,MAFS,IAhBP,yBAsBXE,GAAS,SAAAK,GACL,OAAO,kBACAA,GADP,IAEIR,SAAS,GAEhB,IA3BU,4EAAH,qDA8BhBO,GACH,GAAE,CAACH,EAAID,IAIR,IACMS,EADYV,EAAVH,MACec,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACvB,gBAAaC,UAAWC,EAAAA,SAAxB,WACI,gBAAKD,UAAWC,EAAAA,YAAhB,UACI,gBACQC,IAAK,kCAAoCH,EACzCI,IAAKN,EACLO,MAAK,YAGjB,iBAAKJ,UAAWC,EAAAA,aAAhB,WACI,wBAAKJ,KACL,uCAAeC,UAVdX,EADc,IAgB3B,OACI,iBAAKa,UAAU,YAAf,WACI,kCACA,wBAAKL,MAKhB,C,sLC3EKU,EAAW,gCACXC,EAAU,mCAIHC,EAAY,mCAAG,wGAElBC,EAFkB,UAETH,EAFS,sCAE6BC,GAF7B,SAGDG,MAAMD,GAHL,cAGlBE,EAHkB,gBAILA,EAASC,OAJJ,cAIlBC,EAJkB,yBAKjBA,EAAKC,SALY,kCAOxBC,QAAQC,IAAR,KAAmB,gBAPK,0DAAH,qDAYZC,EAAY,mCAAG,WAAMC,GAAN,2FAElBT,EAFkB,UAETH,EAFS,gCAEuBC,EAFvB,iCAEuDW,EAFvD,iCAGDR,MAAMD,GAHL,cAGlBE,EAHkB,gBAILA,EAASC,OAJJ,cAIlBC,EAJkB,yBAKjBA,EAAKC,SALY,kCAOxBC,QAAQC,IAAR,MAPwB,0DAAH,sDAYZG,EAAS,mCAAG,WAAMC,GAAN,2FAEfX,EAFe,UAENH,EAFM,iBAEWc,EAFX,oBAE8Bb,EAF9B,4BAGEG,MAAMD,GAHR,cAGfE,EAHe,gBAIFA,EAASC,OAJP,cAIfC,EAJe,yBAKdA,GALc,kCAOrBE,QAAQC,IAAR,MAPqB,0DAAH,sDAYTvB,EAAY,mCAAG,WAAM2B,GAAN,2FAElBX,EAFkB,UAETH,EAFS,iBAEQc,EAFR,4BAEmCb,EAFnC,4BAGDG,MAAMD,GAHL,cAGlBE,EAHkB,gBAILA,EAASC,OAJJ,cAIlBC,EAJkB,yBAKjBA,GALiB,kCAOxBE,QAAQC,IAAR,MAPwB,0DAAH,sDAYZK,EAAY,mCAAG,WAAMD,GAAN,2FAElBX,EAFkB,UAETH,EAFS,iBAEQc,EAFR,4BAEmCb,EAFnC,mCAGDG,MAAMD,GAHL,cAGlBE,EAHkB,gBAILA,EAASC,OAJJ,cAIlBC,EAJkB,yBAKjBA,GALiB,kCAOxBE,QAAQC,IAAR,MAPwB,0DAAH,qD","sources":["webpack://react-homework-template/./src/Pages/CastPage/CastPage.module.css?63aa","Pages/CastPage/CastPage.jsx","components/FetchApi/FetchApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"CastPage_castList__EUOih\",\"castListInfo\":\"CastPage_castListInfo__loaoo\"};","import { useState, useEffect } from 'react';\nimport {  useParams,} from 'react-router-dom';\nimport { fetchCredits } from 'components/FetchApi/FetchApi';\nimport styles from './CastPage.module.css'\n\n\nconst CastPage = () => {\n    const [state, setState] = useState({\n        items: [],\n        loading: false,\n        error: null,\n    });\n\n    const { id } = useParams();\n    \n    useEffect(() => {\n        const fetchMovie = async () => {\n            \n            try {\n                setState(prevState => ({\n                    ...prevState,\n                    loading: true,\n                    error: null,\n                }))\n                const result = await fetchCredits(id);\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        items: result.cast,\n                    }\n                })\n            } catch (error) {\n                setState(prevState => ({\n                    ...prevState,\n                    error,\n                }))\n            }\n            finally {\n                setState(prevState => {\n                    return {\n                        ...prevState,\n                        loading: false,\n                    }\n                })\n            }\n        };\n        fetchMovie();\n    }, [id, setState]);\n\n  \n\n    const { items } = state;\n    const elements = items.map(({ id, name, character, profile_path }) => (\n        <li key={id} className={styles.castList}>            \n            <div className={styles.castListImg}>   \n                <img\n                        src={'https://image.tmdb.org/t/p/w500' + profile_path}\n                        alt={name}\n                        width={`50px`}\n                />\n            </div> \n            <div className={styles.castListInfo}> \n                <h3>{name}</h3>\n                <p>Character: {character}</p>\n            </div>  \n        </li>\n    ));\n        \n    return (\n        <div className=\"container\">\n            <h4>Cast</h4>\n            <ul>{elements}</ul>\n        </div>\n    \n    )\n   \n}\n\nexport default CastPage;","\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '03779c52c93ea63ebe46db37a334d7d8';\n\n\n// метод получения массива популярных фильмов. Total_pages = 1000 по дефолту.\nexport const fetchPopular = async () => {\n  try {\n    const url = `${BASE_URL}trending/movie/day?api_key=${API_KEY}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log(error, 'fetchPopular');\n  }\n};\n\n// метод получения массива фильмов по запросу.\nexport const fetchByQuery = async searchQuery => {\n  try {\n    const url = `${BASE_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchQuery}&include_adult=false`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// метод получения инфо о фильме по айдишке\nexport const fetchById = async movieId => {\n  try {\n    const url = `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// актеры\nexport const fetchCredits = async movieId => {\n  try {\n    const url = `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n//отзывы\nexport const fetchReviews = async movieId => {\n  try {\n    const url = `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};"],"names":["useState","items","loading","error","state","setState","id","useParams","useEffect","fetchMovie","prevState","fetchCredits","result","cast","elements","map","name","character","profile_path","className","styles","src","alt","width","BASE_URL","API_KEY","fetchPopular","url","fetch","response","json","data","results","console","log","fetchByQuery","searchQuery","fetchById","movieId","fetchReviews"],"sourceRoot":""}